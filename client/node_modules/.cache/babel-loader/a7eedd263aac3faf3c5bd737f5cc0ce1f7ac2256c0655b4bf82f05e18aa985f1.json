{"ast":null,"code":"var _jsxFileName = \"/home/bharaths0218/account/client/src/pages/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  // `useParams` gets the token from the URL, like `http://.../reset/this_is_the_token`.\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    password: '',\n    confirmPassword: ''\n  });\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const {\n    password,\n    confirmPassword\n  } = formData;\n  const onChange = e => setFormData({\n    ...formData,\n    [e.target.name]: e.target.value\n  });\n  const onSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return;\n    }\n    try {\n      // The API call uses the `token` from the URL to identify the user.\n      const res = await axios.post(`http://localhost:5000/api/auth/reset-password/${token}`, {\n        password\n      });\n      setMessage(res.data.msg);\n\n      // Redirect to the login page after a short delay so the user can see the success message.\n      setTimeout(() => navigate('/login'), 3000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.msg) || 'Password reset failed. The link might be invalid or expired.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"New Password\",\n          name: \"password\",\n          value: password,\n          onChange: onChange,\n          required: true,\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm New Password\",\n          name: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: onChange,\n          required: true,\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green',\n        fontWeight: 'bold'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red',\n        fontWeight: 'bold'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"WUcdkRCoHoIndsI/67R/fQIDyZs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","useParams","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","token","navigate","formData","setFormData","password","confirmPassword","message","setMessage","error","setError","onChange","e","target","name","value","onSubmit","preventDefault","res","post","data","msg","setTimeout","err","_err$response","_err$response$data","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","minLength","style","color","fontWeight","_c","$RefreshReg$"],"sources":["/home/bharaths0218/account/client/src/pages/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst ResetPassword = () => {\n  // `useParams` gets the token from the URL, like `http://.../reset/this_is_the_token`.\n  const { token } = useParams();\n  const navigate = useNavigate();\n\n  const [formData, setFormData] = useState({\n    password: '',\n    confirmPassword: '',\n  });\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n\n  const { password, confirmPassword } = formData;\n\n  const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return;\n    }\n\n    try {\n      // The API call uses the `token` from the URL to identify the user.\n      const res = await axios.post(`http://localhost:5000/api/auth/reset-password/${token}`, { password });\n      setMessage(res.data.msg);\n      \n      // Redirect to the login page after a short delay so the user can see the success message.\n      setTimeout(() => navigate('/login'), 3000);\n    } catch (err) {\n      setError(err.response?.data?.msg || 'Password reset failed. The link might be invalid or expired.');\n    }\n  };\n\n  return (\n    <div className='form-container'>\n      <h2>Reset Password</h2>\n      <form onSubmit={onSubmit}>\n        <div>\n          <input\n            type=\"password\"\n            placeholder=\"New Password\"\n            name=\"password\"\n            value={password}\n            onChange={onChange}\n            required\n            minLength=\"6\"\n          />\n        </div>\n        <div>\n          <input\n            type=\"password\"\n            placeholder=\"Confirm New Password\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={onChange}\n            required\n            minLength=\"6\"\n          />\n        </div>\n        <button type=\"submit\">Reset Password</button>\n      </form>\n      {message && <p style={{ color: 'green', fontWeight: 'bold' }}>{message}</p>}\n      {error && <p style={{ color: 'red', fontWeight: 'bold' }}>{error}</p>}\n    </div>\n  );\n};\n\nexport default ResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}