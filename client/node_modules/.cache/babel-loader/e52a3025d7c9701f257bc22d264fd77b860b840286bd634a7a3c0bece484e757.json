{"ast":null,"code":"var _jsxFileName = \"/home/bharaths0218/account/client/src/pages/Register.js\",\n  _s = $RefreshSig$();\n// client/src/pages/Register.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n// The Register component is a functional component.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  // `useState` is a React Hook that lets you add state to functional components.\n  // We use it to manage our form data, messages, and errors.\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [message, setMessage] = useState(''); // State to hold success messages\n  const [error, setError] = useState(''); // State to hold error messages\n\n  // Destructuring the formData object for easier access.\n  const {\n    name,\n    email,\n    password,\n    confirmPassword\n  } = formData;\n\n  // This function updates the state whenever a user types in an input field.\n  const onChange = e => setFormData({\n    ...formData,\n    // This spreads the current state, keeping all other fields as they are.\n    [e.target.name]: e.target.value // This updates the specific field that was changed.\n  });\n\n  // This function is called when the form is submitted.\n  const onSubmit = async e => {\n    e.preventDefault(); // Prevents the default browser behavior of reloading the page on form submission.\n\n    // Clear any previous messages before starting a new submission.\n    setMessage('');\n    setError('');\n\n    // --- Input Validation ---\n    // Check if the password and confirm password fields match.\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.'); // Set an error message if they don't match.\n      return; // Stop the function here.\n    }\n    try {\n      // Prepare the data to be sent to the backend.\n      const body = {\n        name,\n        email,\n        password\n      };\n\n      // Make the API call using Axios.\n      // `axios.post` sends a POST request to your backend endpoint.\n      // We use the full endpoint URL: `http://localhost:5000/api/auth/register`\n      // The `/api` prefix is from your `server.js` setup, and `/auth/register` is the route itself.\n      const res = await axios.post('http://localhost:5000/api/auth/register', body);\n\n      // --- Success Message Handling ---\n      // If the API call is successful, the `try` block runs.\n      setMessage(res.data.msg); // Set the success message from the backend response.\n\n      // Reset the form fields to be empty for a new registration.\n      setFormData({\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      });\n    } catch (err) {\n      var _err$response, _err$response$data;\n      // If the API call fails, the `catch` block runs.\n      // We check for a response from the server and get the error message,\n      // or show a generic error if something unexpected happens.\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.msg) || 'Registration failed. Please try again.');\n    }\n  };\n\n  // The JSX that defines the form and other elements.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"User Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          name: \"name\" // `name` attribute must match the key in our state object.\n          ,\n          value: name,\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          value: email,\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: password,\n          onChange: onChange,\n          required: true,\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          name: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: onChange,\n          required: true,\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green',\n        fontWeight: 'bold'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red',\n        fontWeight: 'bold'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"zxgp4aCFpyezwmFpgTGUY4Q8Nzg=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","Link","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","name","email","password","confirmPassword","message","setMessage","error","setError","onChange","e","target","value","onSubmit","preventDefault","body","res","post","data","msg","err","_err$response","_err$response$data","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","minLength","style","color","fontWeight","to","_c","$RefreshReg$"],"sources":["/home/bharaths0218/account/client/src/pages/Register.js"],"sourcesContent":["// client/src/pages/Register.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n// The Register component is a functional component.\nconst Register = () => {\n  // `useState` is a React Hook that lets you add state to functional components.\n  // We use it to manage our form data, messages, and errors.\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n\n  const [message, setMessage] = useState(''); // State to hold success messages\n  const [error, setError] = useState('');     // State to hold error messages\n\n  // Destructuring the formData object for easier access.\n  const { name, email, password, confirmPassword } = formData;\n\n  // This function updates the state whenever a user types in an input field.\n  const onChange = e => setFormData({ \n    ...formData, // This spreads the current state, keeping all other fields as they are.\n    [e.target.name]: e.target.value // This updates the specific field that was changed.\n  });\n\n  // This function is called when the form is submitted.\n  const onSubmit = async e => {\n    e.preventDefault(); // Prevents the default browser behavior of reloading the page on form submission.\n\n    // Clear any previous messages before starting a new submission.\n    setMessage('');\n    setError('');\n\n    // --- Input Validation ---\n    // Check if the password and confirm password fields match.\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.'); // Set an error message if they don't match.\n      return; // Stop the function here.\n    }\n\n    try {\n      // Prepare the data to be sent to the backend.\n      const body = { name, email, password };\n\n      // Make the API call using Axios.\n      // `axios.post` sends a POST request to your backend endpoint.\n      // We use the full endpoint URL: `http://localhost:5000/api/auth/register`\n      // The `/api` prefix is from your `server.js` setup, and `/auth/register` is the route itself.\n      const res = await axios.post('http://localhost:5000/api/auth/register', body);\n      \n      // --- Success Message Handling ---\n      // If the API call is successful, the `try` block runs.\n      setMessage(res.data.msg); // Set the success message from the backend response.\n      \n      // Reset the form fields to be empty for a new registration.\n      setFormData({ name: '', email: '', password: '', confirmPassword: '' });\n\n    } catch (err) {\n      // If the API call fails, the `catch` block runs.\n      // We check for a response from the server and get the error message,\n      // or show a generic error if something unexpected happens.\n      setError(err.response?.data?.msg || 'Registration failed. Please try again.');\n    }\n  };\n\n  // The JSX that defines the form and other elements.\n  return (\n    <div className='form-container'>\n      <h2 className='form-title'>User Registration</h2>\n      <form onSubmit={onSubmit}>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\" // `name` attribute must match the key in our state object.\n            value={name}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            value={email}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={onChange}\n            required\n            minLength=\"6\"\n          />\n        </div>\n        <div>\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={onChange}\n            required\n            minLength=\"6\"\n          />\n        </div>\n        <button type=\"submit\">Register</button>\n      </form>\n\n      {/* Conditional rendering of messages. */}\n      {/* If `message` has a value, display it in a green paragraph. */}\n      {message && <p style={{ color: 'green', fontWeight: 'bold' }}>{message}</p>}\n      \n      {/* If `error` has a value, display it in a red paragraph. */}\n      {error && <p style={{ color: 'red', fontWeight: 'bold' }}>{error}</p>}\n      \n      <p>\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}